# SET UP SOME COMMON ALIASES
if ! which vim &> /dev/null;then
  alias vim="vi"
fi
#Mac specific aliases
if uname -rms | grep Darwin &> /dev/null;then
  alias flushdns='dscacheutil -flushcache'
  alias l.='ls -Gd .*'
  alias ll='ls -Gl'
  alias ls='ls -G'
  alias g=/usr/local/bin/git
  alias git=/usr/local/bin/git
  export PATH="${PATH}:/usr/local/sbin"
else
  #aliases that don't work on Mac
  alias l.='ls -d .* --color=auto'
  alias ll='ls -l --color=auto'
  alias ls='ls --color=auto'
  alias g='git'
fi
alias rspec='rspec --color --format nested'
#alias ...='while read line; do echo -n "."; done && echo ""'
alias ...='spinner.py'
alias x='exit'
alias startproxy='while true;do ssh -vND 1080 home; echo "press ctrl+c again to quit.";sleep 3;done'
#run last command as sudo
alias please='eval "sudo $(history -p !!)"'
alias ..2='cd ../../'
alias ..3='cd ../../../'
alias ..4='cd ../../../../'
alias ..5='cd ../../../../../'
alias socks='ssh -ND 1080'

# ENVIRONMENT VARIABLES
if echo "${PATH}" | grep -v "~/bin" &> /dev/null;then
  export PATH="~/bin:${PATH}"
fi
# happy face if last command successful or sadface if last command failed
export PS1="\`if [ \$? = 0 ]; then echo \[\e[33m\]^_^\[\e[0m\]; else echo \[\e[31m\]O_O\[\e[0m\]; fi\`[\u@\h:\w]\\$ "
export EDITOR="vim"
if [ ! -z "${SUDO_USER}" -a "$(id -u)" -eq "0" ];then
  export HOME="/root"
  export HISTFILE="$HOME/.bash_history"
  export MAIL="/var/spool/mail/root"
fi
export HISTIGNORE="&:ls:[bf]g:exit:history:history2"
export HISTCONTROL="ignorespace:ignoredups:&:ls:[bf]g:exit:history:history2"
export HISTFILESIZE=5000
export HISTSIZE=5000
#preserve all bash history
if [ ! -d "${HOME}/.bash_history_dir" ]; then
  mkdir "${HOME}/.bash_history_dir"
fi
export HISTFILE="${HOME}/.bash_history_dir/bash_history_$(date +%Y-%m-%d-%s)"
function history2() {
  ls -1tr ~/.bash_history_dir/ | xargs -I '{}' cat "${HOME}/.bash_history_dir/{}"
  #grep -r '.*' ~/.bash_cmd_history/ | python -c 'import sys;map(lambda x: sys.stdout.write(x.split(":",1)[1]),sys.stdin.readlines())'
}

# SHELL OPTIONS
shopt -s cmdhist
set -o vi

#
# setup ssh-agent
#
#start running ssh-agent if it is not already.
#unset SSH_AUTH_SOCK SSH_AGENT_PID
if [ ! 'root' = "${USER}" ]; then
  if ! pgrep ssh-agent &> /dev/null && ! uname -rms | grep Darwin &> /dev/null; then
    eval "$(ssh-agent -t 3600)" > /dev/null
  fi
  if ! uname -rms | grep Darwin &> /dev/null; then
    #Mac is a special little snow flake
    #SSH_AUTH_SOCK="$(lsof -p "$(pgrep ssh-agent | tr '\n' ',')" | grep "${USER}" | grep -e "launch-.*/Listeners" | tr ' ' '\n' | tail -n1)"
    #SSH_AGENT_PID="$(pgrep ssh-agent | head -n1 )"
  #else
    if [ -z "${SSH_AUTH_SOCK}" -o -z "${SSH_AGENT_PID}" ]; then
        #first time failed so try again.
        SSH_AUTH_SOCK="$(ls -l /tmp/ssh-*/agent.* 2> /dev/null | grep "${USER}" | awk '{print $9}' | tail -n1)"
        SSH_AGENT_PID="$(echo ${SSH_AUTH_SOCK} | cut -d. -f2)"
    fi
    if [ -z "${SSH_AUTH_SOCK}" -o -z "${SSH_AGENT_PID}" ]; then
      SSH_AUTH_SOCK="$(lsof -p "$(pgrep ssh-agent | tr '\n' ',')" | grep "${USER}" | grep -e "ssh-[^/]*/agent\.[0-9]\+$" | tr ' ' '\n' | tail -n1)"
      SSH_AGENT_PID="$(echo ${SSH_AUTH_SOCK} | cut -d. -f2)"
    fi
  fi
  [ -n "${SSH_AUTH_SOCK}" ] && export SSH_AUTH_SOCK
  [ -n "${SSH_AGENT_PID}" ] && export SSH_AGENT_PID
fi

export recipient_list=7257E65F
